version: '3.7'
services:

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZK_SERVER_HEAP: "-Xmx256M -Xms256M"
    ports:
      - "2181:2181"

  kafka-1:
    container_name: kafka-broker-1
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-2:
    container_name: kafka-broker-2
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-3:
    container_name: kafka-broker-3
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "49092:49092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094,PLAINTEXT_HOST://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'Текущие топики Кафки:'
      kafka-topics --bootstrap-server kafka-1:29092 --list

      echo -e 'Создание топиков Кафки:'
      kafka-topics --bootstrap-server kafka-1:9092 --create --if-not-exists --topic test-topic --replication-factor 2 --partitions 8

      echo -e 'Созданы топики Кафки:'
      kafka-topics --bootstrap-server kafka-1:9092 --list
      "

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafka-ui
    restart: "no"
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      KAFKA_BROKERCONNECT: "PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9093,PLAINTEXT://kafka-3:9094"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"

  db_postgresql:
    container_name: db_postgresql
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=kafka_user
      - POSTGRES_PASSWORD=kafka_password
      - POSTGRES_DB=kafka_db
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d
      - /var/lib/postgresql/data:/var/lib/postgresql/data

  producer-service:
    container_name: producer-service
    image: producer-image
    build:
      context: ./producer
      dockerfile: Dockerfile
    restart: always
    ports:
      - "1013:1013"
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
      - db_postgresql
    environment:
      - KAFKA_SERVERS=kafka-1:9092,kafka-2:9093,kafka-3:9094

  consumer-service:
    container_name: consumer-service
    image: consumer-image
    build:
      context: ./consumer
      dockerfile: Dockerfile
    restart: always
    ports:
      - "1012:1012"
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
      - db_postgresql
    environment:
      - KAFKA_SERVERS=kafka-1:9092,kafka-2:9093,kafka-3:9094
      - DB_DATABASE=kafka_db
      - DB_HOST=db_postgresql
      - DB_PORT=5432
      - DB_USER=kafka_user
      - DB_PASSWORD=kafka_password